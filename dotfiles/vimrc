set fileencoding=utf-8
set termencoding=utf-8
set autoindent
set background=dark
set backspace=indent,eol,start
set complete=.,w,b,t,i
set expandtab
set fileformat=unix
set fillchars=stl:_,stlnc:-,vert:\|,fold:\ ,diff:-
set guioptions+=c
set history=50
set hlsearch
set incsearch
set ignorecase
set indentexpr=
set infercase
set laststatus=2
set lazyredraw
set list
set listchars=tab:│\ ,trail:·
"set mouse=a
set nobackup
set nocompatible
set noerrorbells
set nofoldenable
set novisualbell
set pastetoggle=<F1>
set ruler
set selection=inclusive
set selectmode=mouse
set shiftwidth=2
set showcmd
set showmode
set showmatch
set smartindent
set smarttab
set softtabstop=2
set statusline=%F%m%r%h%w[%L][%{&ff}]%y[%p%%][%04l,%04v]
set tabstop=4
set wildmenu
set wildchar=<TAB>
set wildignore=*.class,*.o,*.obj,*.bak,*.exe,*.jpg,*.png,*.gif
set wildmode=list:full
"set wrapmargin=80

syntax on
colorscheme default
filetype plugin indent on

" Normal, visual, select, and operator mode mappings
"   Map hjkl keys for navigating between splits
map <C-H> <C-W>h:res<CR><CR>
map <C-J> <C-W>j:res<CR><CR>
map <C-K> <C-W>k:res<CR><CR>
map <C-L> <C-W>l:res<CR><CR>
map <C-_> <C-W>_:res<CR><CR>
"   Map C-\ to open definition in a new tab
map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
map <F2> :set expandtab!<CR><CR>
map <F3> :set list!<CR><CR>
"   For working with 4 spacers; gosh that's a lot of spaces
map <F4> :set ts=4 sw=4<CR><CR>
"   For working by myself
map <F5> :set ts=2 sw=2<CR><CR>
"   Remove all trailing whitespace
map <silent> <F6> :let _s=@/<Bar>:%s/\s\+$//e<Bar>:let @/=_s<Bar>:nohl<CR>
"   Toggle highlighting of really long lines
map <silent> <F7>
      \ :if exists('w:long_line_match') <Bar>
      \   silent! call matchdelete(w:long_line_match) <Bar>
      \   unlet w:long_line_match <Bar>
      \ elseif &textwidth > 0 <Bar>
      \   let w:long_line_match = matchadd('OverColLimit', '\%>'.&tw.'v.\+', -1) <Bar>
      \ else <Bar>
      \   let w:long_line_match = matchadd('OverColLimit', '\%>85v.\+', -1) <Bar>
      \ endif<CR>
map <F12> :wincmd n<CR>:exe ":0r!find . -type f -not -path './.git/*'"<CR>1G:set buftype=nofile<CR>

" Normal mode mappings (same as nnoremap)
"   Convenience mappings for resizing vertical splits
nmap ] <C-W>>
nmap [ <C-W><
nmap ,c :bd<CR><CR>
nmap <silent> ,t :!ctags --append=yes -R * &<CR><CR>
nmap ,h :set hlsearch!<CR><CR>
nmap ,n :set number!<CR><CR>
nmap ,w :set wrap!<CR><CR>
nmap ,r :res<CR><CR>
nmap ,f <C-W>f
nmap ,x :wq

" Highlight really long lines
highlight OverColLimit ctermbg=darkblue

" Highlight all trailing whitespace
au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\s\+$', -1)

" Source project specific vim stuff if it exists
if filereadable(expand("$HOME/.vimprojects"))
  source ~/.vimprojects
endif
