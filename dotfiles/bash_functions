################################################################################
# Development
################################################################################
function git-cd {
  pushd .
  while [ ! -d .git ]; do
    cd ..
    if [ $(pwd) = '/' ]; then
      echo 'Not in a git repo.' >&1
      popd
      return
    fi
  done
  popd
  cd -
}

function git-parse-dirty {
  MESSAGE="nothing to commit (working directory clean)"
  [[ $(git status 2> /dev/null | tail -n1) != $MESSAGE ]] && echo "*"
}

function git-parse-branch {
  git branch --no-color 2> /dev/null |
  sed -e '/^[^*]/d' -e "s/* \(.*\)/\(\1$(git-parse-dirty)\)/"
}

function hg-parse-dirty {
  [[ -n $(hg status 2> /dev/null | tail -n1) ]] && echo "*"
}

function hg-parse-branch {
  local OUTPUT=$(hg branch 2> /dev/null)
  [[ -n $OUTPUT ]] && echo -n "($OUTPUT$(hg-parse-dirty))"
}

function repo-parse {
  git-parse-branch
  hg-parse-branch
}

################################################################################
# Other
################################################################################
function mounts {
  for I in tager litchi nu13 noel; do
    sudo mount /media/$I
  done
  mount
}

function umounts {
  for I in tager litchi nu13 noel; do
    sudo umount /media/$I
  done
  mount
}

function termname {
  echo -ne "\033]0;$@\007"
}

function buntar {
  tar xvfj "$1" && rm "$1"
}

function guntar {
  tar xvfz "$1" && rm "$1"
}

function find-broken-symlinks {
  find . -type l | (while read FN ; do test -e "$FN" || ls -ld "$FN"; done)
}

function bin2iso {
  bchunk "$1.bin" "$1.cue" "$1.iso"
}

function promptcolors {
  local BLUE="\[\033[0;34m\]"
  local RED="\[\033[0;31m\]"
  local GREEN="\[\033[0;32m\]"
  local WHITE="\[\033[1;37m\]"
  local CYAN="\[\033[0;36m\]"
  local PURPLE="\[\033[0;35m\]"
  local BROWN="\[\033[0;33m\]"
  local YELLOW="\[\033[1;33m\]"
  local LIGHT_BLUE="\[\033[1;30m\]"
  local LIGHT_RED="\[\033[1;31m\]"
  local LIGHT_GREEN="\[\033[1;32m\]"
  local LIGHT_GRAY="\[\033[0;37m\]"
  local LIGHT_CYAN="\[\033[1;36m\]"
  local LIGHT_PURPLE="\[\033[1;35m\]"
  local COLOR=$YELLOW
  PS1="$COLOR[\u@\h:\W$RED\$(repo-parse)$COLOR]\$\[\033[0m\] "
  PS2='> '
  PS4='+ '
}

################################################################################
# Video conversion
################################################################################
function vidmute {
  for F in "$@"; do
    mencoder "$F" -ovc copy -nosound -o "muted-$F"
  done
}

function vidcopy {
  for F in "$@"; do
    ffmpeg -i "$F" -vcodec copy -acodec copy "$F.avi"
  done
}

function flv2avi {
  for F in $@; do
    vidcopy "$F" && \
    vid2avi "$F.avi" && \
    rm "$F.avi"
  done
}

function vid2ipod {
  for F in "$@"; do
    ffmpeg -y -i "$F" -pass 1 -vcodec libx264 -vpre fastfirstpass -vpre ipod640 \
           -b 512k -bt 512k -s 640x480 -threads 0 -f ipod -an /dev/null &&
    ffmpeg -i "$F" -pass 2 -acodec libfaac -ab 128k -ac 2 -vcodec libx264 \
           -vpre normal -vpre ipod640 -b 512k -bt 512k -s 640x480 -threads 0 \
           -f ipod "$F.mp4"
  done
}

function vob2avi {
  for F in "$@"; do
    ffmpeg -i "$F" -f avi -vcodec mpeg4 -b 800k -g 300 -bf 2 -acodec libmp3lame \
           -ab 128k "$F.avi"
  done
}

function asf2avi {
  for F in "$@"; do
    mencoder -oac mp3lame -ovc lavc -of mpeg -mpegopts format=dvd \
             -vf scale=720:480,harddup -srate 48000 -af lavcresample=48000 \
             -lavcopts vcodec=mpeg2video:vrc_buf_size=1835:vrc_maxrate=9800:vbitrate=5000:keyint=18:aspect=4/3:acodec=ac3:abitrate=192 \
             -ofps 30000/1001 -o "$F.avi" "$F"
  done
}

function vid2avi {
  for F in "$@"; do
    mencoder "$F" -ovc lavc -oac mp3lame -o "$F.avi"
  done
}

function wmv2avi {
  for F in $@; do
    mencoder "$F" -ofps 23.976 -ovc lavc -oac copy -o "$F.avi"
  done
}

################################################################################
# Audio conversion
################################################################################
function flac2mp3 {
  for F in "$@"; do
    flac -cd "$F" | lame -h - "$F.mp3"
  done
}

function vid2mp3 {
  for F in "$@"; do
    mplayer -vc null -vo null -ao pcm -benchmark "$F" && \
    lame audiodump.wav "$F.mp3" && \
    rm audiodump.wav
  done
}

################################################################################
# Image conversion
################################################################################
function vid2img {
  for F in "$@"; do
    ffmpeg -i "$F" -r 1 -s WxH -f image2 "$F-%03d.jpg"
  done
}

function img2vid {
  for F in "$@"; do
    ffmpeg -i "$F" -r 12 -s WxH -f image2 "$F.avi"
  done
}
