#!/usr/bin/env ruby
# == Synopsis
#   A script to quickly switch between launching different webapps in Tomcat.  This
#   may be useful if you like to start Tomcat from the command line versus the
#   web interface or your IDE.
#
#   The contexts that Tomcat loads by default are located in:
#   $CATALINA_HOME/conf/Catalina/localhost
#   You should copy these, and any other contexts you'd like to load in the future,
#   into $HOME/.tc.  Then use this script to launch the appropriate context.
#
# == Examples
#   This command launches two webapps.
#     tc webapp1 webapp2
#
#   This command launches the existing webapp(s).
#     tc
#
# == Usage
#   tc webapp1 webapp2 ...
#
# == Options
#   -h, --help              Displays help message
#   -v, --version           Displays the version
#   -r, --run               Run Tomcat with existing contexts
#   -c, --clear             Clear out contexts
#
# == Author
#   Min Huang (min.huang@alumni.usc.edu)
#
require 'fileutils'
require 'optparse'
# Not working on Ruby 1.8.7
#require 'rdoc/usage'

home         = ENV['HOME']
tomcat_dir   = ENV['CATALINA_HOME']
tc_dir       = "#{home}/.tc"
backup_dir   = "#{tc_dir}/backup"
contexts_dir = "#{tomcat_dir}/conf/Catalina/localhost"
version_msg  = "3.0 for Tomcat 6.x.x"

def move_contexts(src, dest)
  Dir.entries(src).each do |file|
    if !File.directory? file
      begin
        FileUtils.mv "#{src}/#{file}", "#{dest}/#{file}"
        puts "I copied #{file} to #{dest} for you."
      rescue
        puts "I couldn't delete original #{file}"
      end
    end
  end
end

if !File.exists? contexts_dir
  puts 'I could not find your Tomcat installation; is CATALINA_HOME set?'
  exit
end

if !File.exists? tc_dir
  FileUtils.mkdir tc_dir
  puts "I made a #{tc_dir} folder for you."
  cop_contexts(contexts_dir, tc_dir)
  puts "I'm done with initial configuration.  Refer to this for usage:"
  puts ""
  puts usage_msg
  exit
end

opts = OptionParser.new
opts.on('-v', '--verbose') do puts version_msg; exit 0 end
#opts.on('-h', '--help')    do RDoc::usage() end
opts.on('-r', '--run')     do exec "#{tomcat_dir}/bin/catalina.sh run" end
opts.on('-c', '--clear')   do move_contexts(contexts_dir, backup_dir); exit 0 end
opts.parse!
#RDoc::usage('usage', 'options') if ARGV.empty?

puts "I am removing the old contexts and putting them in a backup directory."
FileUtils.mkdir backup_dir unless File.exists? backup_dir
move_contexts(contexts_dir, backup_dir)

ARGV.each do |arg|
  context = "#{tc_dir}/#{arg}.xml"
  if !File.exists? context
    puts "I couldn't find #{arg}.xml; copy it to #{tc_dir} first?"
    exit
  end
  FileUtils.cp(context, contexts_dir) unless File.directory? context
  puts "I installed #{context}."
end

puts "Launching Tomcat..."
exec "#{tomcat_dir}/bin/catalina.sh run"
